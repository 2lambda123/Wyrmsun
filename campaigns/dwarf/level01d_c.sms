--	Stratagus Map - Single player campaign

Load("campaigns/dwarf/level01d_c2.sms")

Briefing(
  title,
  objectives,
  "../graphics/ui/dwarf/introscreen1.png",
  "campaigns/dwarf/level01d.txt",
  {}
)

-- FIXME: Check if units are freed.

Triggers = [[
AddTrigger(
	function() return true end,
	function()
  		SetDiplomacy(0, "allied", 1)
  		SetDiplomacy(1, "allied", 0)
  		SetDiplomacy(1, "enemy", 2)
  		SetDiplomacy(1, "enemy", 4)
  		SetDiplomacy(2, "enemy", 1)
  		SetDiplomacy(2, "enemy", 3)
  		SetDiplomacy(3, "neutral", 2)
  		SetDiplomacy(3, "neutral", 4)
--		SetSharedVision(0, true, 1)
--		SetSharedVision(0, true, 3)
--		SetSharedVision(1, true, 0)
--		SetSharedVision(1, true, 3)
--		SetSharedVision(3, true, 0)
--		SetSharedVision(3, true, 1)
	return false end)
AddTrigger(
  function() return (GetPlayerData(GetThisPlayer(), "UnitTypesCount", "unit-gnomish-caravan") + GetPlayerData(3, "UnitTypesCount", "unit-gnomish-caravan")) < 4 end,
  function() return ActionDefeat() end)
AddTrigger(
  function() return (GetPlayerData(GetThisPlayer(), "UnitTypesCount", "unit-gnomish-recruit") + GetPlayerData(3, "UnitTypesCount", "unit-gnomish-recruit")) < 1 end,
  function() return ActionDefeat() end)
AddTrigger(
  function() return (IfRescuedNearUnit("this", ">=", 4, "unit-gnomish-caravan", "unit-dwarven-town-hall") and IfRescuedNearUnit("this", ">=", 1, "unit-gnomish-recruit", "unit-dwarven-town-hall")) end,
  function() return ActionVictory() end)
--AddTrigger(
--  function() return GetNumOpponents(GetThisPlayer()) == 0 end,
--  function() return ActionVictory() end)
AddTrigger(
  function() return GetPlayerData(GetThisPlayer(), "TotalNumUnits") == 0 end,
  function() return ActionDefeat() end)
  
StandardTriggers()
]]

assert(loadstring(Triggers))()

DefineAllow("unit-gnomish-recruit", "FAFFFFFFFFFFFFFF")

-- AI

function AiSoF01Gnomes()
	if (GetPlayerData(AiPlayer(), "UnitTypesCount", AiCityCenter()) < 1) then
		AiSet(AiCityCenter(), 1)
	end
	if (GetPlayerData(AiPlayer(), "UnitTypesCount", AiWorker()) < 1) then
		AiSet(AiWorker(), 1)
	end
	if (GetPlayerData(AiPlayer(), "UnitTypesCount", AiFarm()) < 1) then
		AiSet(AiFarm(), 1)
	end
	if (GetPlayerData(AiPlayer(), "UnitTypesCount", AiFarm()) >= 1 and GetPlayerData(AiPlayer(), "UnitTypesCount", AiWorker()) >= 1 and GetPlayerData(AiPlayer(), "UnitTypesCount", AiWorker()) < 4) then
		AiSet(AiWorker(), 4)
	end
	if (GetPlayerData(AiPlayer(), "UnitTypesCount", AiFarm()) >= 1 and GetPlayerData(AiPlayer(), "UnitTypesCount", AiFarm()) < 3 and GetPlayerData(AiPlayer(), "UnitTypesCount", AiWorker()) >= 4) then
		AiSet(AiFarm(), 3)
	end
	if (GetPlayerData(AiPlayer(), "UnitTypesCount", AiWorker()) >= 4 and GetPlayerData(AiPlayer(), "UnitTypesCount", AiBarracks()) < 1) then
		AiSet(AiBarracks(), 1)
	end
	if (GetPlayerData(AiPlayer(), "UnitTypesCount", AiBarracks()) >= 1 and GetPlayerData(AiPlayer(), "UnitTypesCount", "unit-gnomish-recruit") < 4) then
		AiSet("unit-gnomish-recruit", 4)
	end
	if (GetPlayerData(AiPlayer(), "UnitTypesCount", "unit-gnomish-recruit") >= 4) then
		AiForce(0, {"unit-gnomish-recruit", 4})
	end
end
DefineAi("sof-01-gnomes", "*", "sof-01-gnomes", AiSoF01Gnomes)

-- Map

Load("campaigns/dwarf/level01d.sms")
