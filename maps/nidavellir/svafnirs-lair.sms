-- Stratagus Map Setup

LoadTileModels("scripts/tilesets/cave.lua")

CleanRawTiles()
CleanHexTiles()

HexTiles = {
	{"Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Tree",  "Tree",  "Land",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Tree",  "Land",  "Rough", "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Tree",  "Tree",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Tree",  "Land",  "Land",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Rough", "Mush",  "Rock",  "Land",  "Land",  "Rock",  "Rough", "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Tree",  "Tree",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Rough", "Mush",  "Land",  "Mush",  "Rough", "Land",  "Rough", "Rock",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Tree",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Rough", "Land",  "Land",  "Land",  "Rough", "Land",  "Rough", "Rock",  "Rough", "Mush",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rough", "Land",  "Rock",  "Rock",  "Rough", "Rough", "Rough", "Rough", "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Mush",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rough", "Land",  "Rough", "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Land",  "Land",  "Rough", "Mush",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rough", "Rough", "Rough", "Rock",  "Land",  "Rough", "Land",  "Land",  "Rock",  "Rough", "Mush",  "Mush",  "Mush",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Land",  "Land",  "Rough", "Rock",  "Rock",  "Land",  "Rock",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Land",  "Rough", "Land",  "Land",  "Rock",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Rock",  "Land",  "Land",  "Rough", "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Mush",  "Land",  "Rough", "Mush",  "Land",  "Land",  "Rock",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Rock",  "Land",  "Land",  "Rough", "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rock",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Land",  "Rock",  "Water", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Land",  "Rough", "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Rough", "Land",  "Mush",  "Mush",  "Mush",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Mush",  "Mush",  "Mush",  "Rough", "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Rough", "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Water", "Water", "Land",  "Rough", "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rough", "Land",  "Land",  "Land",  "Land",  "Land",  "Rough", "Rock",  "Rock"},
	{"Land",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rock",  "Water", "Rock",  "Water", "Water", "Land",  "Rough", "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Rough", "Rough", "Land",  "Rough", "Rough", "Rock",  "Land",  "Mush",  "Rock",  "Rock"},
	{"Land",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Water", "Water", "Water", "Water", "Water", "Land",  "Land",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Land",  "Rough", "Rock",  "Rock",  "Rough", "Land",  "Rough", "Rough", "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Land",  "Land",  "Land",  "Water", "Water", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Mush",  "Mush",  "Land",  "Water", "Rock",  "Rock",  "Water", "Land",  "Land",  "Rough", "Rough", "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Land",  "Land",  "Water", "Water", "Water", "Water", "Land",  "Rock",  "Rock",  "Rock",  "Rough", "Land",  "Land",  "Rough", "Rough", "Rough", "Rough", "Mush",  "Land",  "Land",  "Rock",  "Rock",  "Water", "Water", "Land",  "Land",  "Rough", "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Land",  "Water", "Water", "Water", "Water", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Rough", "Land",  "Mush",  "Land",  "Land",  "Water", "Rock",  "Rock",  "Rough", "Rough", "Land",  "Land",  "Water", "Water", "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Land",  "Land",  "Water", "Water", "Water", "Water", "Water", "Rock",  "Rock",  "Rock",  "Water", "Water", "Water", "Land",  "Rough", "Mush",  "Rough", "Mush",  "Rock",  "Rock",  "Water", "Water", "Rough", "Mush",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Rock",  "Land",  "Water", "Water", "Water", "Water", "Water", "Land",  "Rock",  "Rock",  "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Rock",  "Rough", "Rough", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Water", "Water", "Water", "Rock",  "Rock",  "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rough", "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Mush",  "Mush",  "Land",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Mush",  "Mush",  "Land",  "Mush",  "Mush",  "Land",  "Mush",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Land",  "Land",  "Land",  "Land",  "Rough", "Land",  "Rock",  "Land",  "Land",  "Land",  "Rough", "Rough", "Mush",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Land",  "Land",  "Water", "Land",  "Water", "Land",  "Land",  "Land",  "Land",  "Rough", "Rough", "Water", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Land",  "Land",  "Water", "Land",  "Mush",  "Mush",  "Rock",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Rough", "Land",  "Land",  "Land",  "Rough", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Rough", "Rough", "Land",  "Water", "Water", "Water", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Rough", "Land",  "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"}
}

ConvertHexTiles()

SetRawTile(31, 56, "Water")
SetRawTile(53, 31, "Rock")

-- make the lava chasms by the forge into land, so that the forge can be placed
SetRawTile(30, 49, "Land")
SetRawTile(30, 50, "Land")
SetRawTile(31, 49, "Land")
SetRawTile(31, 50, "Land")
SetRawTile(32, 52, "Land")
SetRawTile(32, 53, "Land")
SetRawTile(33, 52, "Land")
SetRawTile(33, 53, "Land")
SetRawTile(34, 49, "Land")
SetRawTile(34, 50, "Land")
SetRawTile(35, 49, "Land")
SetRawTile(35, 50, "Land")

-- rectify cave wall pieces which appear too much like separate small blocks
SetRawTile(7, 20, "Rock")
SetRawTile(21, 27, "Water")
SetRawTile(24, 47, "Water")
SetRawTile(26, 50, "Water")
SetRawTile(32, 39, "Water")
SetRawTile(33, 55, "Water")
SetRawTile(36, 55, "Water")
SetRawTile(37, 55, "Water")
SetRawTile(37, 10, "Rock")
SetRawTile(49, 22, "Rock")
SetRawTile(49, 49, "Water")
SetRawTile(52, 26, "Rock")
SetRawTile(54, 37, "Water")
SetRawTile(55, 25, "Water")
SetRawTile(61, 37, "Water")

-- clear space for glyphs
SetRawTile(27, 56, "Land")
SetRawTile(27, 57, "Land")
SetRawTile(28, 56, "Land")
SetRawTile(28, 57, "Land")
SetRawTile(27, 58, "Land")

AdjustTransitions(0, Map.Info.MapWidth - 1, 0, Map.Info.MapHeight - 1)

ApplyRawTiles()

-- Player Setup
if (GrandStrategy and GrandStrategyEventMap == false) then
	SetStartView(0, 31, 49)
else
	SetStartView(0, 16, 16)
end
SetPlayerData(0, "RaceName", "dwarf")
SetPlayerData(0, "Resources", "gold", 5000)
SetPlayerData(0, "Resources", "lumber", 5000)
SetPlayerData(0, "Resources", "stone", 2500)
SetPlayerData(0, "Resources", "oil", 0)
SetPlayerData(0, "Faction", "norlund-clan")
SetAiType(0, "land-attack")
SetStartView(1, 4, 20)
SetPlayerData(1, "RaceName", "dwarf")
SetPlayerData(1, "Resources", "gold", 10000)
SetPlayerData(1, "Resources", "lumber", 10000)
SetPlayerData(1, "Resources", "stone", 5000)
SetPlayerData(1, "Resources", "oil", 0)
SetPlayerData(1, "Faction", "shinsplitter-clan")
SetAiType(1, "land-attack")
SetStartView(2, 70, 43)
SetPlayerData(2, "RaceName", "kobold")
SetPlayerData(2, "RaceName", "dwarf")
SetPlayerData(2, "Resources", "gold", 0)
SetPlayerData(2, "Resources", "lumber", 0)
SetPlayerData(2, "Resources", "stone", 0)
SetPlayerData(2, "Resources", "oil", 0)
SetPlayerData(2, "Name", "Svafnir")
SetAiType(2, "land-attack")
SetStartView(3, 32, 50)
SetPlayerData(3, "RaceName", "dwarf")
SetPlayerData(3, "Resources", "gold", 0)
SetPlayerData(3, "Resources", "lumber", 0)
SetPlayerData(3, "Resources", "stone", 0)
SetPlayerData(3, "Resources", "oil", 0)
SetPlayerData(3, "Name", "Abandoned Stronghold")
SetAiType(3, "passive")
SetPlayerData(PlayerNumNeutral, "RaceName", "neutral")

-- volcanic craters near the forge
unit = CreateUnit("unit-volcanic-crater", PlayerNumNeutral, {30, 47})
unit = CreateUnit("unit-volcanic-crater", PlayerNumNeutral, {33, 47})
unit = CreateUnit("unit-volcanic-crater", PlayerNumNeutral, {30, 52})
unit = CreateUnit("unit-volcanic-crater", PlayerNumNeutral, {33, 52})

unit = CreateUnit("unit-gold-deposit", PlayerNumNeutral, {4, 11}) -- Shinsplitter Camp Gold Mine
SetResourcesHeld(unit, 100000)
unit = CreateUnit("unit-gold-rock", PlayerNumNeutral, {5, 12})
unit = CreateUnit("unit-gold-rock", PlayerNumNeutral, {5, 12})
unit = CreateUnit("unit-gold-rock", PlayerNumNeutral, {5, 12})
unit = CreateUnit("unit-gold-rock", PlayerNumNeutral, {5, 12})
unit = CreateUnit("unit-gold-rock", PlayerNumNeutral, {5, 12})

if (GrandStrategy and GrandStrategyBattleBaseBuilding) then
	unit = CreateUnit("unit-gold-deposit", PlayerNumNeutral, {31, 49})
	SetResourcesHeld(unit, 50000)
end
	
if (GrandStrategy == false) then
	if (GetPlayerData(0, "Name") ~= "Shorbear Clan" and GetPlayerData(0, "Name") ~= "Shinsplitter Clan" and (GetThisPlayer() ~= 0 or (PlayerFaction ~= "Shorbear Clan" and PlayerFaction ~= "Shinsplitter Clan"))) then
		unit = CreateUnit("unit-dwarven-axefighter", 0, {16, 16})
		SetUnitVariable(unit, "Character", "Rugnur")
		unit = CreateUnit("unit-dwarven-axefighter", 0, {16, 16})
		SetUnitVariable(unit, "Character", "Baglur")
		unit = CreateUnit("unit-dwarven-axefighter", 0, {16, 16})
		SetUnitVariable(unit, "Character", "Thursagan")
		unit = CreateUnit("unit-dwarven-gryphon-rider", 0, {16, 16}) -- Krawg
		IncreaseUnitLevel(unit, 1)
		AcquireAbility(unit, "upgrade-critical-strike")
	end

	-- base for the Shinsplitters
	unit = CreateUnit("unit-dwarven-town-hall", 1, {1, 19})
	unit = CreateUnit("unit-dwarven-mushroom-farm", 1, {12, 0})
	unit = CreateUnit("unit-dwarven-mushroom-farm", 1, {10, 1})

	unit = CreateUnit("unit-dwarven-thane", 1, {4, 20}) -- Crintil
	SetUnitVariable(unit, "Active", false)

	-- create a few more steelclads, to make the Shinsplitters have more of a fighting force
	unit = CreateUnit("unit-dwarven-steelclad", 1, {4, 28})
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-dwarven-steelclad", 1, {4, 28})
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-dwarven-steelclad", 1, {4, 28})
	SetUnitVariable(unit, "Active", false)

	unit = CreateUnit("unit-dwarven-miner", 1, {4, 20})
	unit = CreateUnit("unit-dwarven-miner", 1, {4, 20})
	unit = CreateUnit("unit-dwarven-miner", 1, {4, 20})
	unit = CreateUnit("unit-dwarven-miner", 1, {4, 20})
	unit = CreateUnit("unit-dwarven-miner", 1, {4, 20})

	-- the enemy gets mercenaries
	unit = CreateUnit("unit-surghan-mercenary-steelclad", 1, {4, 28})
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-surghan-mercenary-steelclad", 1, {4, 28})
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-surghan-mercenary-steelclad", 1, {4, 28})
	SetUnitVariable(unit, "Active", false)

	-- extra mercenary for hard difficulty and beyond
	if (GameSettings.Difficulty == 3) then -- if difficulty is hard
		unit = CreateUnit("unit-surghan-mercenary-steelclad", 1, {4, 28})
		SetUnitVariable(unit, "Active", false)
	end

	-- two extra mercenaries for brutal difficulty
	if (GameSettings.Difficulty == 4) then -- if difficulty is brutal
		unit = CreateUnit("unit-surghan-mercenary-steelclad", 1, {4, 28})
		SetUnitVariable(unit, "Active", false)
	end

	unit = CreateUnit("unit-surghan-mercenary-thane", 1, {4, 28})
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-surghan-mercenary-thane", 1, {4, 28})
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-surghan-mercenary-thane", 1, {4, 28})
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-dwarven-explorer", 1, {4, 28})
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-dwarven-explorer", 1, {4, 28})
	SetUnitVariable(unit, "Active", false)

	-- abandoned dwarven buildings
	unit = CreateUnit("unit-brising-smithy", 3, {31, 49})

	unit = CreateUnit("unit-dwarven-guard-tower", 3, {20, 12}) -- add some rescuable dwarven guard towers to buy some time from the attackers, so that Rugnur and his companions can reach the forge
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {22, 17})
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {24, 13})
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {41, 10}) -- having this tower next to the other one was creating to much of an impediment for later Shinsplitter attacks
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {41, 14})
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {37, 26})
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {32, 34})
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {31, 36})
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {43, 37})
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {57, 34})
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {41, 47})
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {41, 49})
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	unit = CreateUnit("unit-dwarven-guard-tower", 3, {37, 50})
	if (unit) then
		unit = CreateUnitInTransporter("unit-dwarven-scout", 3, unit)
	end
	
	SetDiplomacy(0, "enemy", 1)
	SetDiplomacy(0, "enemy", 2)
	SetDiplomacy(1, "enemy", 0)
	SetDiplomacy(1, "enemy", 2)
	SetDiplomacy(2, "enemy", 0)
	SetDiplomacy(2, "enemy", 1)

--	unit = CreateUnit("unit-wyrm", 2, {8, 34}) -- Khrakrahs / Svafnir
	unit = CreateUnit("unit-wyrm", 2, {26, 31}) -- moved Svafnir here, so that he is accessible
	SetUnitVariable(unit, "Name", "Svafnir")
	SetUnitVariable(unit, "Active", false)
elseif (GrandStrategyEventMap) then
	SetPlayerData(0, "Resources", "gold", 0)
	SetPlayerData(0, "Resources", "lumber", 0)
	SetPlayerData(0, "Resources", "stone", 0)
	
	unit = CreateUnit("unit-gold-deposit", PlayerNumNeutral, {4, 11}) -- Shinsplitter Camp Gold Mine
	SetResourcesHeld(unit, 100000)
	unit = CreateUnit("unit-gold-rock", PlayerNumNeutral, {5, 12})
	unit = CreateUnit("unit-gold-rock", PlayerNumNeutral, {5, 12})
	unit = CreateUnit("unit-gold-rock", PlayerNumNeutral, {5, 12})
	unit = CreateUnit("unit-gold-rock", PlayerNumNeutral, {5, 12})
	unit = CreateUnit("unit-gold-rock", PlayerNumNeutral, {5, 12})
	
	-- Rugnur
	if (GetProvinceHero("Caverns of Chaincolt", "Rugnur") == 2) then
		unit = CreateUnit(GetGrandStrategyHeroUnitType("Rugnur"), 0, {16, 16})
		SetUnitVariable(unit, "Character", "Rugnur")
	end

	-- Baglur
	if (GetProvinceHero("Caverns of Chaincolt", "Baglur") == 2) then
		unit = CreateUnit(GetGrandStrategyHeroUnitType("Baglur"), 0, {16, 16})
		SetUnitVariable(unit, "Character", "Baglur")
	end

	-- Thursagan
	if (GetProvinceHero("Caverns of Chaincolt", "Thursagan") == 2) then
		unit = CreateUnit(GetGrandStrategyHeroUnitType("Thursagan"), 0, {16, 16})
		SetUnitVariable(unit, "Character", "Thursagan")
	end

	-- Norlund units
	CreateProvinceUnits("Caverns of Chaincolt", 0, 1, false, true)
	CreateProvinceCustomHero("Caverns of Chaincolt", 0)

	-- Shinsplitters
	CreateProvinceUnits("Southern Tunnels", 1, 2, false, true)
	CreateProvinceCustomHero("Southern Tunnels", 1)
	if (GetNumUnitsAt(GetFactionPlayer("Shinsplitter Clan"), "unit-dwarven-thane", {0, 0}, {256, 256}) < 1 and GetProvinceUnitQuantity("Southern Tunnels", "unit-dwarven-thane") >= 1) then
		unit = CreateUnit("unit-dwarven-thane", 1, {Players[1].StartPos.x, Players[1].StartPos.y})
		SetUnitVariable(unit, "Active", false)
		ChangeProvinceUnitQuantity("Southern Tunnels", "unit-dwarven-thane", -1)
	end

	-- abandoned dwarven buildings
	local abandoned_building_player = 3
	if (GrandStrategyFaction.Name ~= "Shinsplitter Clan") then
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {20, 12}) -- add some rescuable dwarven guard towers to buy some time from the attackers, so that Rugnur and his companions can reach the forge
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {22, 17})
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {24, 13})
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {41, 10}) -- having this tower next to the other one was creating to much of an impediment for later Shinsplitter attacks
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {41, 14})
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {37, 26})
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {32, 34})
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {31, 36})
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {43, 37})
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {57, 34})
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {41, 47})
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {41, 49})
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
		unit = CreateUnit("unit-dwarven-guard-tower", abandoned_building_player, {37, 50})
		if (unit) then
			unit = CreateUnitInTransporter("unit-dwarven-scout", abandoned_building_player, unit)
		end
	else
		abandoned_building_player = 0
	end
	
	unit = CreateUnit("unit-brising-smithy", abandoned_building_player, {31, 49})

	SetDiplomacy(0, "enemy", 1)
	SetDiplomacy(0, "enemy", 2)
	SetDiplomacy(1, "enemy", 0)
	SetDiplomacy(1, "enemy", 2)
	SetDiplomacy(2, "enemy", 0)
	SetDiplomacy(2, "enemy", 1)

	if (GrandStrategyFaction.Name == "Shinsplitter Clan") then
		SetDiplomacy(0, "neutral", 2)
		SetDiplomacy(2, "neutral", 0)
	end

	unit = CreateUnit("unit-wyrm", 2, {26, 31}) -- moved Svafnir here, so that he is accessible
	SetUnitVariable(unit, "Name", "Svafnir")
	SetUnitVariable(unit, "Active", false)
end

if (LoadedGame == false) then
	CreateNeutralBuildings("unit-hole", (Map.Info.MapWidth * Map.Info.MapHeight) / 4096, 0, Map.Info.MapWidth - 2, 0, Map.Info.MapHeight - 2, false)
end

CreateCritters()
