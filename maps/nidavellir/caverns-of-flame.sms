-- Stratagus Map Setup

LoadTileModels("scripts/tilesets/cave.lua")

CleanRawTiles()
CleanHexTiles()

HexTiles = {
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Mush",  "Rough", "Mush",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Mush",  "Mush",  "Land",  "Rough", "Land",  "Mush",  "Mush",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Rough", "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rock",  "Rock",  "Land",  "Land",  "Rough", "Mush",  "Land",  "Land",  "Land",  "Land",  "Mush",  "Rock",  "Rock",  "Mush",  "Rock",  "Land",  "Land",  "Land",  "Mush",  "Land",  "Mush",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Mush",  "Rock",  "Land",  "Mush",  "Land",  "Mush",  "Land",  "Rock",  "Land",  "Rough", "Land",  "Land",  "Land",  "Rough", "Rough", "Land",  "Rock",  "Mush",  "Rough", "Land",  "Rough", "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rough", "Rough", "Land",  "Rock",  "Rough", "Rough", "Land",  "Land",  "Land",  "Land",  "Rough", "Mush",  "Rock",  "Land",  "Land",  "Rough", "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Water", "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Rock",  "Water", "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Water", "Rock",  "Water", "Rock",  "Land",  "Water", "Rock",  "Rough", "Land",  "Water", "Rock",  "Rock",  "Water", "Water", "Water", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Rock",  "Water", "Water", "Rock",  "Rock",  "Water", "Land",  "Water", "Rock",  "Rough", "Land",  "Water", "Rock",  "Rock",  "Water", "Rock",  "Rock",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rock",  "Rock",  "Water", "Rock",  "Rock",  "Land",  "Rough", "Land",  "Water", "Water", "Water", "Rock",  "Water", "Land",  "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rock",  "Rock",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Land",  "Rough", "Land",  "Land",  "Rock",  "Rock",  "Water", "Rock",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Land",  "Rock",  "Rock",  "Land",  "Rough", "Rough", "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Water", "Rock",  "Rock",  "Land",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Water", "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rock",  "Rock",  "Water", "Water", "Land",  "Land",  "Land",  "Rough", "Land",  "Rough", "Land",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Land",  "Rock",  "Land",  "Land",  "Rock",  "Rock",  "Land",  "Land",  "Water", "Water", "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Land",  "Rock",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Land",  "Land",  "Rough", "Land",  "Land",  "Rock",  "Land",  "Land",  "Land",  "Rough", "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Rough", "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rough", "Water", "Water", "Rock",  "Water", "Land",  "Rock",  "Rough", "Land",  "Land",  "Rock",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Land",  "Rough", "Water", "Rock",  "Water", "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Water", "Water", "Land",  "Land",  "Rock",  "Rock",  "Water", "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Rough", "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Water", "Water", "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Land",  "Land",  "Land",  "Rock",  "Water", "Water", "Rock",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rough", "Rough", "Water", "Land",  "Land",  "Land",  "Land",  "Land",  "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Land",  "Rock",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Rough", "Rough", "Land",  "Rough", "Rock",  "Rock",  "Rock"},
	{"Water", "Rough", "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Water", "Rock",  "Rough", "Rough", "Land",  "Land",  "Water", "Rock",  "Rock",  "Rock",  "Water", "Rock",  "Rock",  "Water", "Land",  "Land",  "Rough", "Land",  "Rock",  "Rock"},
	{"Water", "Rough", "Rough", "Rough", "Rough", "Land",  "Rock",  "Rock",  "Water", "Rock",  "Rough", "Rock",  "Water", "Water", "Water", "Rock",  "Land",  "Land",  "Rough", "Land",  "Water", "Rock",  "Rock",  "Water", "Water", "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Rough", "Land",  "Rock",  "Rock"},
	{"Water", "Rough", "Rough", "Land",  "Rough", "Rock",  "Rock",  "Water", "Water", "Rock",  "Rough", "Land",  "Land",  "Land",  "Land",  "Rock",  "Land",  "Land",  "Rough", "Land",  "Land",  "Rock",  "Rock",  "Water", "Water", "Rock",  "Water", "Water", "Water", "Land",  "Rough", "Land",  "Land",  "Rock"},
	{"Rock",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Water", "Rock",  "Rock",  "Rough", "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Water", "Water", "Rough", "Water", "Water", "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Water", "Rock",  "Rock",  "Rock",  "Rough", "Land",  "Land",  "Water"},
	{"Rock",  "Land",  "Rough", "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Water", "Land",  "Rock",  "Rock",  "Water", "Land",  "Land",  "Land",  "Water", "Rock",  "Land",  "Rock",  "Water", "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Water"},
	{"Rock",  "Land",  "Land",  "Rough", "Land",  "Rock",  "Rock",  "Water", "Water", "Rock",  "Rock",  "Water", "Rough", "Land",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Rough", "Rough", "Land",  "Land",  "Rock",  "Water", "Rock",  "Water", "Rock",  "Water", "Rock",  "Water", "Rock",  "Rough", "Rock"},
	{"Rock",  "Rock",  "Rock",  "Land",  "Rough", "Land",  "Land",  "Water", "Land",  "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Land",  "Rough", "Land",  "Water", "Water", "Water", "Land",  "Rough", "Land",  "Water", "Water", "Water", "Rock",  "Rock",  "Water", "Water", "Water", "Rock",  "Land",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Land",  "Land",  "Rough", "Rough", "Land",  "Rough", "Land",  "Land",  "Rock",  "Rough", "Rough", "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rough", "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Water", "Land",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Rough", "Land",  "Land",  "Rough", "Land",  "Water", "Rock",  "Rock",  "Rough", "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Water"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Land",  "Rock",  "Land",  "Land",  "Rough", "Rock",  "Rock",  "Water", "Water", "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rough", "Land",  "Rough", "Land",  "Mush",  "Rock",  "Rock",  "Land",  "Land",  "Water"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Water", "Rock",  "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Water", "Rock",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Water", "Water", "Water", "Rough", "Rough", "Rough", "Rough", "Land",  "Land",  "Land",  "Land",  "Land",  "Water"},
	{"Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Water", "Rock",  "Water", "Water", "Rock",  "Water", "Rock",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Land",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Water"},
	{"Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Water"},
	{"Rock",  "Rock",  "Rock",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Water"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Water"}
}

ConvertHexTiles()

-- fix issues related to hex-to-tile conversion
SetRawTile(11, 55, "Rough")
SetRawTile(11, 56, "Water")
SetRawTile(13, 39, "Rock")
SetRawTile(13, 60, "Rock")
SetRawTile(14, 56, "Water")
SetRawTile(15, 38, "Rock")
SetRawTile(16, 46, "Rock")
SetRawTile(16, 60, "Rock")
SetRawTile(16, 62, "Water")
SetRawTile(17, 46, "Rough")
SetRawTile(17, 60, "Rough")
SetRawTile(17, 62, "Water")
SetRawTile(18, 25, "Water")
SetRawTile(18, 38, "Rock")
SetRawTile(18, 45, "Rock")
SetRawTile(19, 17, "Rock")
SetRawTile(20, 62, "Water")
SetRawTile(21, 16, "Water")
SetRawTile(21, 45, "Rock")
SetRawTile(21, 57, "Rock")
SetRawTile(22, 6, "Rock")
SetRawTile(22, 61, "Water")
SetRawTile(23, 56, "Rock")
SetRawTile(24, 48, "Water")
SetRawTile(24, 60, "Water")
SetRawTile(25, 60, "Rough")
SetRawTile(25, 43, "Rock")
SetRawTile(25, 55, "Rock")
SetRawTile(26, 21, "Rock")
SetRawTile(26, 41, "Water")
SetRawTile(28, 62, "Rock")
SetRawTile(32, 53, "Rock")
SetRawTile(33, 43, "Water")
SetRawTile(35, 51, "Water")
SetRawTile(36, 17, "Rough")
SetRawTile(36, 30, "Rough")
SetRawTile(37, 17, "Water")
SetRawTile(37, 30, "Water")
SetRawTile(37, 36, "Rock")
SetRawTile(38, 26, "Rock")
SetRawTile(38, 51, "Water")
SetRawTile(40, 30, "Water")
SetRawTile(40, 33, "Water")
SetRawTile(40, 43, "Water")
SetRawTile(41, 13, "Water")
SetRawTile(41, 24, "Rock")
SetRawTile(42, 18, "Water")
SetRawTile(43, 18, "Water")
SetRawTile(43, 59, "Water")
SetRawTile(44, 24, "Rock")
SetRawTile(45, 44, "Rock")
SetRawTile(48, 14, "Water")
SetRawTile(48, 59, "Water")
SetRawTile(50, 35, "Rough")
SetRawTile(50, 36, "Rock")
SetRawTile(52, 21, "Rock")
SetRawTile(52, 35, "Water")
SetRawTile(52, 50, "Water")
SetRawTile(53, 41, "Water")
SetRawTile(54, 36, "Water")
SetRawTile(55, 45, "Rock")
SetRawTile(55, 46, "Rock")
SetRawTile(56, 41, "Water")
SetRawTile(62, 46, "Rock")
SetRawTile(64, 53, "Water")

-- to give enough space to player 5 to have a town hall
SetRawTile(51, 35, "Rough")
SetRawTile(51, 36, "Rough")
SetRawTile(52, 35, "Rough")

AdjustTransitions(0, CMap:get().Info.MapWidth - 1, 0, CMap:get().Info.MapHeight - 1)

SetRawTile(60, 38, "Land")
SetRawTile(60, 39, "Land")
SetRawTile(60, 40, "Land")
SetRawTile(61, 38, "Land")
SetRawTile(61, 39, "Land")
SetRawTile(61, 40, "Land")

ApplyRawTiles()

-- Player Setup
SetStartView(0, 30, 8)
SetPlayerData(0, "RaceName", "dwarf")
SetPlayerData(0, "Resources", "copper", 2000)
SetPlayerData(0, "Resources", "lumber", 2000)
SetPlayerData(0, "Resources", "stone", 2000)
SetPlayerData(0, "Resources", "oil", 0)
SetPlayerData(0, "Faction", "norlund-clan")
SetAiType(0, "land-attack")
SetStartView(1, 30, 1)
SetPlayerData(1, "RaceName", "dwarf")
SetPlayerData(1, "Resources", "copper", 10000)
SetPlayerData(1, "Resources", "lumber", 10000)
SetPlayerData(1, "Resources", "stone", 10000)
SetPlayerData(1, "Resources", "oil", 0)
SetAiType(1, "land-attack")
SetStartView(2, 54, 8)
SetPlayerData(2, "RaceName", "goblin")
SetPlayerData(2, "Resources", "copper", 10000)
SetPlayerData(2, "Resources", "lumber", 10000)
SetPlayerData(2, "Resources", "stone", 5000)
SetPlayerData(2, "Resources", "oil", 0)
SetAiType(2, "land-attack")
SetStartView(3, 12, 10)
SetPlayerData(3, "RaceName", "goblin")
SetPlayerData(3, "Resources", "copper", 10000)
SetPlayerData(3, "Resources", "lumber", 10000)
SetPlayerData(3, "Resources", "stone", 5000)
SetPlayerData(3, "Resources", "oil", 0)
SetAiType(3, "land-attack")
SetStartView(4, 12, 32)
SetPlayerData(4, "RaceName", "goblin")
SetPlayerData(4, "Resources", "copper", 10000)
SetPlayerData(4, "Resources", "lumber", 10000)
SetPlayerData(4, "Resources", "stone", 5000)
SetPlayerData(4, "Resources", "oil", 0)
SetAiType(4, "land-attack")
SetStartView(5, 56, 32)
SetPlayerData(5, "RaceName", "goblin")
SetPlayerData(5, "Resources", "copper", 10000)
SetPlayerData(5, "Resources", "lumber", 10000)
SetPlayerData(5, "Resources", "stone", 5000)
SetPlayerData(5, "Resources", "oil", 0)
SetAiType(5, "land-attack")
SetPlayerData(PlayerNumNeutral, "RaceName", "neutral")

unit = CreateUnit("unit-copper-deposit", PlayerNumNeutral, {16, 31})
SetResourcesHeld(unit, 100000)
unit = CreateUnit("unit-copper-rock", PlayerNumNeutral, {17, 32})
unit = CreateUnit("unit-copper-rock", PlayerNumNeutral, {17, 32})
unit = CreateUnit("unit-copper-rock", PlayerNumNeutral, {17, 32})
unit = CreateUnit("unit-copper-rock", PlayerNumNeutral, {17, 32})
unit = CreateUnit("unit-copper-rock", PlayerNumNeutral, {17, 32})
unit = CreateUnit("unit-copper-deposit", PlayerNumNeutral, {58, 38})
SetResourcesHeld(unit, 100000)
unit = CreateUnit("unit-copper-rock", PlayerNumNeutral, {59, 39})
unit = CreateUnit("unit-copper-rock", PlayerNumNeutral, {59, 39})
unit = CreateUnit("unit-copper-rock", PlayerNumNeutral, {59, 39})
unit = CreateUnit("unit-copper-rock", PlayerNumNeutral, {59, 39})
unit = CreateUnit("unit-copper-rock", PlayerNumNeutral, {59, 39})
	
if not (GrandStrategy) then
	unit = CreateUnit("unit-glyph", PlayerNumNeutral, {36, 46})
	unit = CreateUnit("unit-glyph", PlayerNumNeutral, {36, 47})
	unit = CreateUnit("unit-glyph", PlayerNumNeutral, {37, 46})
	unit = CreateUnit("unit-glyph", PlayerNumNeutral, {37, 47})

	if (GetPlayerData(0, "Name") ~= "Shorbear Clan" and GetPlayerData(0, "Name") ~= "Shinsplitter Clan" and (GetThisPlayer() ~= 0 or (PlayerFaction ~= "Shorbear Clan" and PlayerFaction ~= "Shinsplitter Clan"))) then
		unit = CreateUnit("unit-dwarven-axefighter", 0, {30, 8})
		SetUnitVariable(unit, "Character", "rugnur")
		unit = CreateUnit("unit-dwarven-steelclad", 0, {30, 8})
		SetUnitVariable(unit, "Character", "baglur")
		unit = CreateUnit("unit-dwarven-thane", 0, {30, 8})
		SetUnitVariable(unit, "Character", "thursagan")
		unit = CreateUnit("unit-dwarven-gryphon-rider", 0, {30, 8}) -- Krawg
		IncreaseUnitLevel(unit, 1)
		AcquireAbility(unit, "upgrade-critical-strike")
		-- give some veteran units to Rugnur's group, otherwise they would have too few warriors (4 sentinels and 2 runemasters)
		unit = CreateUnit("unit-dwarven-thane", 0, {30, 8})
		unit = CreateUnit("unit-dwarven-thane", 0, {30, 8})
		unit = CreateUnit("unit-dwarven-thane", 0, {30, 8})
		unit = CreateUnit("unit-dwarven-thane", 0, {30, 8})
		unit = CreateUnit("unit-dwarven-thane", 0, {30, 8})
		unit = CreateUnit("unit-dwarven-thane", 0, {30, 8})
	end

	unit = CreateUnit("unit-goblin-town-hall", 2, {53, 7})
	unit = CreateUnit("unit-goblin-warlord", 2, {54, 8}) -- orcish warlord
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-goblin-worker", 2, {54, 8})

	unit = CreateUnit("unit-goblin-town-hall", 3, {11, 10})
	unit = CreateUnit("unit-goblin-warlord", 3, {12, 10}) -- orcish warlord
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-goblin-worker", 3, {12, 10})

	unit = CreateUnit("unit-goblin-town-hall", 4, {11, 31})
	unit = CreateUnit("unit-goblin-warlord", 4, {12, 32}) -- troll warrior
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-goblin-barbarian", 4, {34, 42}) -- troll
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-goblin-barbarian", 4, {30, 48}) -- orcish warrior
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-goblin-barbarian", 4, {32, 50}) -- orcish warrior
	SetUnitVariable(unit, "Active", false)
	if (GameSettings.Difficulty == 3) then -- if difficulty is hard
		unit = CreateUnit("unit-goblin-barbarian", 4, {34, 42}) -- troll
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 4, {30, 48}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 4, {32, 50}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
	elseif (GameSettings.Difficulty == 4) then -- if difficulty is brutal
		unit = CreateUnit("unit-goblin-barbarian", 4, {34, 42}) -- troll
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 4, {30, 48}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 4, {32, 50}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 4, {34, 42}) -- troll
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 4, {30, 48}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 4, {32, 50}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 4, {34, 42}) -- troll
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 4, {30, 48}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 4, {32, 50}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
	end
	unit = CreateUnit("unit-goblin-worker", 4, {12, 32})
	unit = CreateUnit("unit-goblin-banner", 4, {17, 27})
	unit = CreateUnit("unit-goblin-banner", 4, {19, 28})
	unit = CreateUnit("unit-goblin-banner", 4, {4, 39})
	unit = CreateUnit("unit-goblin-banner", 4, {7, 42})

	unit = CreateUnit("unit-goblin-town-hall", 5, {53, 31})
	unit = CreateUnit("unit-goblin-warlord", 5, {56, 32}) -- troll warrior
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-goblin-barbarian", 5, {38, 42}) -- troll
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-goblin-barbarian", 5, {42, 48}) -- orcish warrior
	SetUnitVariable(unit, "Active", false)
	unit = CreateUnit("unit-goblin-barbarian", 5, {40, 50}) -- orcish warrior
	SetUnitVariable(unit, "Active", false)
	if (GameSettings.Difficulty == 3) then -- if difficulty is hard
		unit = CreateUnit("unit-goblin-barbarian", 5, {38, 42}) -- troll
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 5, {42, 48}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 5, {40, 50}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
	elseif (GameSettings.Difficulty == 4) then -- if difficulty is brutal
		unit = CreateUnit("unit-goblin-barbarian", 5, {38, 42}) -- troll
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 5, {42, 48}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 5, {40, 50}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 5, {38, 42}) -- troll
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 5, {42, 48}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 5, {40, 50}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 5, {38, 42}) -- troll
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 5, {42, 48}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
		unit = CreateUnit("unit-goblin-barbarian", 5, {40, 50}) -- orcish warrior
		SetUnitVariable(unit, "Active", false)
	end
	unit = CreateUnit("unit-goblin-worker", 5, {56, 32})
	unit = CreateUnit("unit-goblin-banner", 5, {47, 33})
	unit = CreateUnit("unit-goblin-banner", 5, {50, 28})

	SetDiplomacy(0, "enemy", 1)
	SetDiplomacy(0, "enemy", 2)
	SetDiplomacy(0, "enemy", 3)
	SetDiplomacy(0, "enemy", 4)
	SetDiplomacy(0, "enemy", 5)
	SetDiplomacy(1, "enemy", 0)
	SetDiplomacy(1, "enemy", 2)
	SetDiplomacy(1, "enemy", 3)
	SetDiplomacy(1, "enemy", 4)
	SetDiplomacy(1, "enemy", 5)
	SetDiplomacy(2, "enemy", 0)
	SetDiplomacy(2, "enemy", 1)
	SetDiplomacy(3, "enemy", 0)
	SetDiplomacy(3, "enemy", 1)
	SetDiplomacy(4, "enemy", 0)
	SetDiplomacy(4, "enemy", 1)
	SetDiplomacy(5, "enemy", 0)
	SetDiplomacy(5, "enemy", 1)
end

CreateNeutralBuildings("unit-volcanic-crater", 16, 0, CMap:get().Info.MapWidth - 2, 0, CMap:get().Info.MapHeight - 2, false) -- to make the map seem more volcanic until lava tiles are implemented

CreateNeutralBuildings("unit-hole", (CMap:get().Info.MapWidth * CMap:get().Info.MapHeight) / 4096, 0, CMap:get().Info.MapWidth - 2, 0, CMap:get().Info.MapHeight - 2, false)

CreateCritters()
