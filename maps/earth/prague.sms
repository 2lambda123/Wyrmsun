LoadTileModels("scripts/tilesets/forest.lua")

SetPlayerData(0, "Resources", "gold", 5000)
SetPlayerData(0, "Resources", "lumber", 2500)
SetPlayerData(0, "Resources", "oil", 0)
SetAiType(0, "land-attack")
SetPlayerData(1, "Resources", "gold", 2000)
SetPlayerData(1, "Resources", "lumber", 1000)
SetPlayerData(1, "Resources", "oil", 0)
SetAiType(1, "land-attack")
SetPlayerData(15, "RaceName", "neutral")

local layout = {
	{ 0,  0,  0,  8,  0,  0,  0,  0},
	{-1,  0,  0, 17, 10, 19,  0,  0},
	{-1,  0,  0, 18, 10, 16,  0,  0},
	{-1,  0,  0,  9,  6,  0,  0,  0},
	{-1,  0,  0,  8,  0,  0,  0,  0},
	{-1,  0,  0,  8,  0,  0,  0,  0}
}

local rock_generation = {
	{0, 16, 0, 16}
}

local town_buildings = {"Farm", "Farm"}

local town_units = {"unit-germanic-warrior", "unit-germanic-archer", "unit-germanic-archer"}

local invader_units = {"unit-hero-marbod", "unit-teuton-swordsman", "unit-teuton-archer"}

if (LoadedGame == false) then
	if (GrandStrategy == false) then
		GenerateTown(layout, 1, "celt", "Boii Tribe", 0, "teuton", "Marcomanni Tribe", town_buildings, town_units, true, invader_units, "low", rock_generation)
		
		if (MaxTechLevel[GetThisPlayer() + 1] == "") then -- set AI max tech level to Agrarian (Iron)
			for i=0,15 do
				if (MaxTechLevel[i + 1] == "" and i ~= GetThisPlayer()) then
					MaxTechLevel[i + 1] = "Agrarian (Iron)"
				end
			end
		end
	else
		GenerateTown(layout, 1, "celt", "Boii Tribe", 0, "teuton", "Marcomanni Tribe", town_buildings, {}, false, {}, "low", nil)
	end
end

if (GrandStrategyEventMap) then
	SetAiType(0, "grand-strategy-battle")
	SetAiType(1, "grand-strategy-battle")
	
	local units_to_be_created = {}
	
	-- Marcomanni units
	for i, unitName in ipairs(Units) do
		if (IsMilitaryUnit(unitName)) then
			units_to_be_created[string.gsub(unitName, "-", "_")] = 0
			units_to_be_created[string.gsub(unitName, "-", "_")] = WorldMapProvinces.Brandenburg.Units[string.gsub(unitName, "-", "_")] / 2
			WorldMapProvinces.Brandenburg.Units[string.gsub(unitName, "-", "_")] = WorldMapProvinces.Brandenburg.Units[string.gsub(unitName, "-", "_")] - units_to_be_created[string.gsub(unitName, "-", "_")]
		end
	end
	for i, unitName in ipairs(Units) do
		if (IsMilitaryUnit(unitName)) then
			if (units_to_be_created[string.gsub(unitName, "-", "_")] > 0) then
				for i=1,(units_to_be_created[string.gsub(unitName, "-", "_")] * BattalionMultiplier) do
					unit = CreateUnit(unitName, 0, {Players[0].StartPos.x, Players[0].StartPos.y})
				end
			end
		end
	end
	unit = CreateUnit("unit-hero-marbod", 0, {Players[0].StartPos.x, Players[0].StartPos.y})
	WorldMapProvinces.Brandenburg.Heroes.unit_hero_marbod = 0
	
	-- Boii units
	for i, unitName in ipairs(Units) do
		if (IsMilitaryUnit(unitName)) then
			units_to_be_created[string.gsub(unitName, "-", "_")] = 0
			units_to_be_created[string.gsub(unitName, "-", "_")] = WorldMapProvinces.Bohemia.Units[string.gsub(unitName, "-", "_")]
			WorldMapProvinces.Bohemia.Units[string.gsub(unitName, "-", "_")] = WorldMapProvinces.Bohemia.Units[string.gsub(unitName, "-", "_")] - units_to_be_created[string.gsub(unitName, "-", "_")]
		end
	end
	for i, unitName in ipairs(Units) do
		if (IsMilitaryUnit(unitName)) then
			if (units_to_be_created[string.gsub(unitName, "-", "_")] > 0) then
				for i=1,(units_to_be_created[string.gsub(unitName, "-", "_")] * BattalionMultiplier) do
					unit = CreateUnit(unitName, 1, {Players[1].StartPos.x, Players[1].StartPos.y})
				end
			end
		end
	end
end
